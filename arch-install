#!/bin/bash
# WARNING: this script will destroy data on the selected disk.
# This script can be run by executing the following:
#   curl -sL 'to be done'
set -uo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

MIRRORLIST_URL="https://www.archlinux.org/mirrorlist/?country=US&protocol=https&use_mirror_status=on"

pacman -Sy --noconfirm pacman-contrib

echo "Updating mirror list"
curl -s "$MIRRORLIST_URL" | \
    sed -e 's/^#Server/Server/' -e '/^#/d' | \
    rankmirrors -n 5 - > /etc/pacman.d/mirrorlist

### Get infomation from user ###
hostname=$(dialog --stdout --inputbox "Enter hostname" 0 0) || exit 1
clear
: ${hostname:?"hostname cannot be empty"}

user=$(dialog --stdout --inputbox "Enter admin username" 0 0) || exit 1
clear
: ${user:?"user cannot be empty"}

password=$(dialog --stdout --passwordbox "Enter admin password" 0 0) || exit 1
clear
: ${password:?"password cannot be empty"}
password2=$(dialog --stdout --passwordbox "Enter admin password again" 0 0) || exit 1
clear
[[ "$password" == "$password2" ]] || ( echo "Passwords did not match"; exit 1; )

devicelist=$(lsblk -dplnx size -o name,size | grep -Ev "boot|rpmb|loop" | tac)
device=$(dialog --stdout --menu "Select 1st disk" 0 0 0 ${devicelist}) || exit 1
clear

devicelist=$(lsblk -dplnx size -o name,size | grep -Ev "boot|rpmb|loop" | tac)
device2=$(dialog --stdout --menu "Select 2nd disk" 0 0 0 ${devicelist}) || exit 1
clear

### Set up logging ###
exec 1> >(tee "stdout.log")
exec 2> >(tee "stderr.log")

timedatectl set-ntp true

### Setup the disk and partitions ###

parted --script "${device}" -- mklabel gpt \
  mkpart ESP fat32 1Mib 1024MiB \
  set 1 boot on \
  mkpart primary 1025MiB 100%

parted --script "${device2}" -- mklabel gpt \
  mkpart primary 1Mib 100%

# Simple globbing was not enough as on one device I needed to match /dev/mmcblk0p1 
# but not /dev/mmcblk0boot1 while being able to match /dev/sda1 on other devices.
part_boot="$(ls ${device}* | grep -E "^${device}p?1$")"
part_root="$(ls ${device}* | grep -E "^${device}p?2$")"
part_2="$(ls ${device2}* | grep -E "^${device2}p?1$")"

wipefs "${part_boot}"
wipefs "${part_root}"
wipefs "${part_2}"

mkfs.vfat -F32 "${part_boot}"
mkfs.btrfs -f -d single -L "Arch Linux" "${part_root}" "${part_2}"
mkdir /mnt/btrfs-root
mount -o defaults,relatime "${part_root}" /mnt/btrfs-root
mkdir -p /mnt/btrfs-root/__snapshot
mkdir -p /mnt/btrfs-root/__current
btrfs subvolume create /mnt/btrfs-root/__current/ROOT
btrfs subvolume create /mnt/btrfs-root/__current/home
btrfs subvolume create /mnt/btrfs-root/__current/opt
btrfs subvolume create /mnt/btrfs-root/__current/var

mkdir -p /mnt/btrfs-current
mount -o defaults,relatime,nodev,subvol=__current/ROOT "${part_root}" /mnt/btrfs-current
mkdir -p /mnt/btrfs-current/home
mkdir -p /mnt/btrfs-current/opt
mkdir -p /mnt/btrfs-current/var/lib
mkdir -p /mnt/btrfs-current/boot
mount "${part_boot}" /mnt/btrfs-current/boot

mount -o defaults,relatime,nodev,nosuid,subvol=__current/home "${part_root}" /mnt/btrfs-current/home
mount -o defaults,relatime,nodev,nosuid,subvol=__current/opt "${part_root}"  /mnt/btrfs-current/opt
mount -o defaults,relatime,nodev,nosuid,noexec,subvol=__current/var  "${part_root}" /mnt/btrfs-current/var
mkdir -p /mnt/btrfs-current/var/lib
mount --bind /mnt/btrfs-root/__current/ROOT/var/lib /mnt/btrfs-current/var/lib

pacstrap /mnt/btrfs-current base base-devel btrfs-progs grub efibootmgr intel-ucode 
genfstab -U -p /mnt/btrfs-current >> /mnt/btrfs-current/etc/fstab
sed 's/var\/lib/run\/btrfs-root/' -i /mnt/btrfs-current/etc/fstab
cat >>/mnt/btrfs-current/etc/fstab <<EOF
/run/btrfs-root/__current/ROOT/var/lib		/var/lib	none		bind
EOF

sed 's/fsck/btrfs/' -i /mnt/btrfs-current/etc/mkinitcpio.conf
sed 's/#en_US.UTF-8/en_US.UTF-8/' -i /mnt/btrfs-current/etc/locale.gen
ln -sf /usr/share/zoneinfo/America/New_York "/mnt/btrfs-current/etc/localtime"
echo "${hostname}" > /mnt/btrfs-current/etc/hostname
echo "LANG=en_US.UTF-8" > /mnt/btrfs-current/etc/locale.conf

cat >>/mnt/btrfs-current/etc/pacman.conf <<EOF
[multilib]
Include = /etc/pacman.d/mirrorlist
EOF
arch-chroot /mnt/btrfs-current locale-gen
arch-chroot /mnt/btrfs-current bootctl install
arch-chroot /mnt/btrfs-current grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
arch-chroot /mnt/btrfs-current grub-mkconfig -o /boot/grub/grub.cfg

arch-chroot /mnt/btrfs-current useradd -mU -G wheel "$user"

echo "$user:$password" | chpasswd --root /mnt/btrfs-current
echo "root:$password" | chpasswd --root /mnt/btrfs-current
